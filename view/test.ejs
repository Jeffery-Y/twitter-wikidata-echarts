<!DOCTYPE html>
<html style="height: 100%">
<head>
    <meta charset="utf-8">
</head>
<body style="height: 100%; margin: 0">
<div id="container" style="height: 100%"></div>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/echarts-all-3.js"></script>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts-stat/ecStat.min.js"></script>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/dataTool.min.js"></script>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/china.js"></script>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/map/js/world.js"></script>
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=ZUONbpqGBsYGXNIYHicvbAbM"></script>
<script type="text/javascript" src="http://echarts.baidu.com/gallery/vendors/echarts/extension/bmap.min.js"></script>
<script src="https://cdn.bootcss.com/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript">
    var current_url = String(window.location.pathname);
    var url_split = current_url.split('/')
    var url_length = url_split.length
    var url_index
    var user_name = 'realDonalTrump'
    // var temp_data, signalymj
    for(url_index = url_length - 1; url_index > 0; url_index--){
        if(url_split[url_index] != ''){
            user_name = url_split[url_index]
            break
        }
    }
    // console.log(user_name)
    var file_name = '/' + user_name + '-complex.json'
    var dom = document.getElementById("container");
    var myChart = echarts.init(dom);
    var app = {};
    option = null;
    myChart.showLoading();
    $.get(file_name, function (linedata) {
        // temp_data = linedata;
        if(typeof(linedata)=="string"){
            alert("本地没有该用户的数据，正在爬取数据中....")
            // setTimeout('window.location.reload()',5000); //指定5秒刷新一次
            // sigalymj = 'Yes';
        }
        if(linedata == null)window.location.reload();
        myChart.hideLoading();
        var data = linedata[0];
        data.sort(function (x, y){
            if(x['value'] > y['value'])return -1;
            else if(x['value'] < y['value'])return 1;
            else return 0;
        });
        data = data.slice(0, 1200)

        var links = linedata[1]
        var categories = linedata[2]

        var legend_categories = linedata[3]
        // legend_categories = legend_categories.slice(0, 5)

        var data_complex = linedata[4]
        var categories_complex = linedata[5]

        var legend_categories_complex = linedata[6]
        // legend_categories_complex = legend_categories_complex.slice(0, 4)
        // legend_categories_concat = legend_categories.concat(legend_categories_complex)

        Array.prototype.ymjindexOf = function(val) {
            for (var i = 0; i < this.length; i++) {
              if (this[i]['name'] == val['name']) return i;
            }
            return -1;
        };
        legend_index = 0
        legend_categories_last = []
        while(legend_categories_last.length < 7 
            && legend_index < legend_categories.length && legend_index < legend_categories_complex.length){

            // console.log(legend_index)
            // legend_categories_last.push(legend_categories[legend_index], legend_categories_complex[legend_index])

            // console.log(legend_categories[legend_index])
            // console.log(legend_categories_last.indexOf(legend_categories[legend_index])) 
            if(legend_categories_last.ymjindexOf(legend_categories[legend_index]) == -1){
                legend_categories_last.push(legend_categories[legend_index])
                console.log(legend_categories_last[legend_categories_last.length-1])
            }
               
            // console.log(legend_categories_complex[legend_index])
            // console.log(legend_categories_last.indexOf(legend_categories_complex[legend_index])) 
            if(legend_categories_last.ymjindexOf(legend_categories_complex[legend_index]) == -1){
                legend_categories_last.push(legend_categories_complex[legend_index])
                console.log(legend_categories_last[legend_categories_last.length-1])
            }
            legend_index += 1
        }
        console.log(legend_categories_last)

        option = {

            title: {
                text: user_name + "的Twitter关系图",
                subtext: 'Default layout',
                top: 'bottom',
                left: 'right'
            },
            backgroundColor: new echarts.graphic.RadialGradient(0.3, 0.3, 0.8, 
                [{
                    offset: 0,
                    color: '#f7f8fa'
                }, {
                    offset: 1,
                    color: '#cdd0d5'
                }]
            ),
            legend: { 
                formatter: function (name) {
                    console.log(name)
                    return name.substring(0, name.indexOf('.s '))
                    // return echarts.format.truncateText(name, 100, '14px Microsoft Yahei', '…');
                },
                tooltip: {
                    formatter: function (params) {
                        return params.name
                    },
                    show: true
                },
                itemGap: 20,
                //type: 'scroll',
                // left: '3%',
                // right: '10%',
                // pageFormatter: '{current}/{total}',
                data: legend_categories_last
            },
            tooltip: {
                formatter: function (params) {
                    if (params.componentType === 'markPoint') {
                        console.log('markPoint')
                    }
                    else if (params.componentType === 'series') {
                        if (params.seriesType === 'graph') {
                            if (params.dataType === 'edge') {
                                // graph 的 edge（边）上。
                                console.log('graph edge')
                                return params.name;
                            }
                            else {
                                // graph 的 node（节点）上。
                                name = params.name
                                value = params.value
                                data = params.data
                                str1 = data['category']+'<br>'+name+':'+value
                                return str1;
                            }
                        }
                    }

                }
            },

            toolbox: {
                show: true,
                feature: {
                    dataView: {
                        show: true,
                        readOnly: true
                    },
                    restore: {
                        show: true
                    },
                    saveAsImage: {
                        show: true
                    }
                }
            },
            animationDuration: 1500,
            animationEasingUpdate: 'quinticInOut',
            series: [{
                left: '0',
                right:'50%',
                name: 'Twitter',
                type: 'graph',
                layout: 'force',
                draggable: 'False',
                force: {
                    //initLayout:'circular'
                    edgeLength: 50,
                    repulsion: 50,
                    gravity: 0.3
                },
                data: data,
                edges: links,
                categories: categories,
                focusNodeAdjacency: true,
                roam: true,
                label: {
                    normal: {
                        position: 'right',
                        formatter: '{b}'
                    }
                },

            },{
                nodeScaleRatio:'0',
                left: '50%',
                right:'0',
                name: 'Twitter-complex',
                type: 'graph',
                layout: 'force',
                draggable: 'False',
                force: {
                    //initLayout:'circular'
                    edgeLength: 100,
                    repulsion: 100,
                    gravity: 0.1
                },
                data: data_complex,
                edges: links,
                categories: categories_complex,
                focusNodeAdjacency: true,
                roam: true,
                label: {
                    normal: {
                        position: 'right',
                        formatter: '{b}'
                    }
                },
            }]
        };
        myChart.setOption(option)
        // 处理点击事件并且跳转到相应的页面
        myChart.on('click', function (params) {
            if (params.componentType === 'markPoint') {
                console.log('markPoint')
            }
            else if (params.componentType === 'series') {
                if (params.seriesType === 'graph') {
                    if (params.dataType === 'edge') {
                        // 点击到了 graph 的 edge（边）上。
                        console.log('graph edge')
                    }
                    else {
                        // 点击到了 graph 的 node（节点）上。
                        window.open('http://128.199.154.141:5000/' + params.name);
                    }
                }
            }
        });
    });;
    if (option && typeof option === "object") {
        myChart.setOption(option, true);
    }
</script>
</body>
</html>
